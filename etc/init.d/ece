#! /usr/bin/env bash

#          version: $Revision: #1 $ $Date: 2011/02/18 $
#           author: torstein@escenic.com

### BEGIN INIT INFO
# Provides:          ece
# Required-Start:    $local_fs $network $syslog
# Required-Stop:     $local_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Escenic Content Engine
### END INIT INFO

#################################################################
# Usage:
# * copy this script to /etc/init.d/ece
#
# * copy its configuration file to /etc/default/ece (or
# * /etc/conf.d/ece on Gentoo based disitributions)
#
# * make sure it's executable, chmod +x /etc/init.d/ece
#
# * add it to the desired runlevels. On Debian based systems this
#  would be: update-rc.d ece defaults
#######################################################################

if [ $(whoami) != "root" ]; then
    echo "Sorry, you must be root for running $0"
    exit 1
fi

#######################################################################
# Default values
#######################################################################
dir_list="
/var/cache/escenic
/var/backups/escenic
/var/crash/escenic
/var/log/escenic
/var/lib/escenic
/var/run/escenic
"

ece_script=/usr/bin/ece

# The values above may be overidden a file named the same as this
# init.d script. This init.d configuration must also hold the
# variables controlling which ECE instances to start. The list of
# locations per default caters (at least) for Debian, RedHat & Gentoo
# based systems:
conf_file_location_list="
/etc/default
/etc/conf.d
/etc/sysconfig
"

function read_conf_file()
{
    for el in $conf_file_location_list; do
        if [ -r $el/ece ]; then
            source $el/ece
            found_conf=1
            break
        fi
    done

    if [ -z $found_conf ]; then
        echo "Couldn't find configuration for $0, exiting :-("
        exit 1
    fi
}

function ensure_dirs_are_ok()
{
    for el in $dir_list; do
        if [ ! -d $el ]; then
            mkdir -p $el
        fi

        if [[ ${el} == "/var/cache"* || ${el} == "/var/lib"* ]]; then
            chown --changes "${ece_unix_user-escenic}:${ece_unix_group-escenic}" $el
        else
            chown --recursive --changes "${ece_unix_user-escenic}:${ece_unix_group-escenic}" $el
        fi
    done
}

function ensure_ece_script_is_ok()
{
    if [ ! -r $ece_script ]; then
        echo "Couldn't read $ece_script"
        exit 1
    elif [ ! -x $ece_script ]; then
        echo "$ece_script needs to be executable (do: chmod +x $ece_script)"
        exit 1
    fi

}

function execute_command()
{
    if [ "${enable_rmi_hub-0}" -eq 1 ]; then
        su - ${ece_unix_user-escenic} -c "$ece_script -t rmi-hub $1"
    fi

    for el in $engine_instance_list; do
        su - "${ece_unix_user-escenic}" -c "$ece_script -t engine -i $el $1"
    done

    for el in $search_instance_list; do
        su - "${ece_unix_user-escenic}" -c "$ece_script -t search -i $el $1"
    done

    for el in $analysis_instance_list; do
        su - "${ece_unix_user-escenic}" -c "$ece_script -t analysis -i $el $1"
    done
}

if [ $1 ]; then
    read_conf_file
    ensure_ece_script_is_ok
    ensure_dirs_are_ok
    execute_command $1
else
    echo "Usage: `basename $0` <start|stop|restart|status>"
fi
