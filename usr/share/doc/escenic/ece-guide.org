#+TITLE: ece
#+AUTHOR: Escenic Cloud Team
#+OPTIONS: H:6 num:5 toc:2

* NAME
ece - command for managing your Escenic instances.

* SYNOPSIS
ece [[-i --instance instance]] [[[-t --type type]]] [[[-p --publication
publication]]] [[[--uri ear-to-deploy]]] COMMAND

* DESCRIPTION
Command which will let you manage your Escenic Content Engine, Escenic
Analysis Engine and search instances with ease. The script does
everything from starting & stopping the instance to building &
deploying EAR files and detailed information about the running
instances.

* OPTIONS
** -t --type type
The following types are available:
- engine :: The Escenic Content Engine, this is the default and is the
            assumed type if none is specified.

- search :: A standalone search indexer and solr instance

- analysis :: The Escenic Analysis Engine also knows as 'Stats'

- rmi-hub :: The RMI hub responsible for the internal communication
             between the ECE instances. This is not needed for ECE >=
             5.3.

** -i --instance instance
The type instance, such as editor1, engine1 or search1
** -p --publication publication
Needed only for updating publication resources
** -r --resource resource
Used for updating publication resources.  Must be one of:
content-type, feature, layout, layout-group image-version, menu
** -v --verbose
Prints out debug statements, useful for debugging.

* COMMANDS
You can specify one or more commands. The commands are executed in
the same order that you pass them to the ece command.
** applog
The type's app server log
** assemble
Runs the Assembly Tool.
** backup
Allows you to create backup of your entire Escenic installation, or
just specific parts of it. Without any additional options, ece
backup, will create a backup with:
- Solar & Nursery configuration (everything in /etc/escenic)
- DB dump
- Solar index
- Multimedia files
- The entire app server
- init.d script and its configuration
- state files

You may exclude any parts you don't want:

| Backup specific option | Explanation          |
|------------------------+----------------------|
| --exclude-binaries     | No software binaries |
| --exclude-solr         | No Solar index       |
| --exclude-multimedia   | No multimedia files  |
| --exclude-init         | No init files        |
| --exclude-state        | No state files       |

** clean
Clears the temporary files from the instance's application server as
well as Assembly Tool work files (if available).
** deploy
Deploys the locally assembled EAR, available in
/var/cache/escenic/engine.ear.

Optionally, you can specify an EAR on a remote server by passing the
--uri parameter. If the server is password protected, you can either
set builder_http_user and  builder_http_password in ece.conf or pass
it on the command line:

| Deploy specific option | Explanation                        |
|------------------------+------------------------------------|
| --file                 | Local EAR file to deploy           |
| --uri                  | URI to the EAR to deploy           |
| --user                 | HTTP User which may access the URI |
| --password             | HTTP password to the user above.   |

** edit
Edit a publication resources. This command requires you to specify
both the publication and the resource which you wish to edit:
#+BEGIN_SRC sh
$ ece -i engine1 -p my-pub -r content-type edit
#+END_SRC
If you don't change anything, ece will not change the publication
resource.

** flush
Clear all the ECE caches of the given instance.
** help
Prints this help screen
** info
Get information about the instance.
** kill
Uses force to stop the type
** list-deployments
Lists all the deployments done on this instance (granted that you've
used the ece script to make the deployment).
** list-instances
List the instances installed on your machine.
** list-logs
List all the log files for a given instance
** log
The type's Log4J log
** outlog
The [ece#engine] command log (system out log)
** restart
Restarts the type
** start
Starts the type
** status
Checks if the type is running
** stop
Stops the type
** threaddump
Write a thread dump to standard out (system out log)
** top
Watch the JSP top on your instance. Here, you can watch which JSPs
are consuming the most CPU time.

** update
Update publication resources
** versions
Lists the version of the ECE and all the plugins.
* TAB completion
The ece command offers TAB completion, given that your version of BASH
supports this and that you have enabled it (some distributions hasn't
turned on BASH completion per default).

You can auto complete all options and commands, as well as the
instance names, publication names and resources types.

* Log files
There are a number of log files associated with the different
instances. To get an overview of all the log files for a particular
instance, do:
#+BEGIN_SRC sh
$ ece -i engine1 list-logs
#+END_SRC

To tail all of these, pass the -q parameter and pipe it to tail:
#+BEGIN_SRC sh
$ ece -i engine1 -q list-logs | xargs tail -f
#+END_SRC

* Configuration files
| Path                             | Explanation                 |
|----------------------------------+-----------------------------|
| /etc/escenic/ece.conf            | The main configuration file |
| /etc/escenic/ece-<instance>.conf | Instance specific settings  |
| $HOME/.ecerc                     | User specific settings.     |

* Examples
Starting an instance:
#+BEGIN_SRC sh
$ ece -i engine1 start
#+END_SRC

Creating a thread dump from an instance:
#+BEGIN_SRC sh
$ ece -i engine1 threaddump
#+END_SRC

Building a new EAR file using the a locally available Assembly Tool,
deploy this new EAR and restart the instance:
#+BEGIN_SRC sh
$ ece -i engine1 assemble deploy restart
#+END_SRC

Stop the instance, deploy an EAR from the build server, clean all app
server temporary files including the JSP compilation directory and
start the instance again:
#+BEGIN_SRC sh
$ ece -i engine1 \\
      --uri http://builder.example.com/myproject-1.2.ear \\
      stop clean deploy start
#+END_SRC


* COPYRIGHT
Copyright 2011-2015 Escenic

Licensed under the Apache License, Version 2.0, see
https://github.com/escenic/ece-scripts/COPYING for further details.

* AUTHOR
Torstein Krause Johansen
