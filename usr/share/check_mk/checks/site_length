#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# expected line is
# <epoch> <site> <site-size in bytes> <time in seconds>
# 

import time

def inventory_site_length(info):
    items = []
    for line in info:
        item = "site length of "+line[1]
        items.append((item, None))
    return items


def check_site_length(item, params, info):
    for line in info:
        state=3
        site="at"
        size=0.0
        load_time=0.0
        msg="No data or site_length check is not working properly." + line[1]
        result=state, msg
        if ("site length of " + line[1]) == item:
#            try:
            sample_epoch=int(line[0])
#            except ValueError:              
#                return state, "Data format is not correct. Expected <epoch> <site> <size> <loading time>"
            curr_epoch=int(time.time())
            if (sample_epoch + 90) < curr_epoch:
                size=0
                load_time=0
                state=2             
                msg="Data is not updated."
                result=state, msg
                return result
            size=float(line[2])/1024
            load_time=float(line[3])
            str_size="{:.2f}".format(size)
            str_time="{:.2f}".format(load_time)
            #msg=" ".join(str(w) for w in line[2:])
            if size <= 0:
                state=2
                msg="CRITICAL. Webpage is not available from tomcat." 
            elif size < 50:
                state=2
                msg="CRITICAL. Webpage is smaller than 50 KB from tomcat port."
            else:
                state=0
                msg="OK. "+ str_size +" KB in "+ str_time+" sec."
            result=state, msg
            return result

check_info['site_length'] = (
        check_site_length,
        "%s",
        1,
        inventory_site_length)
