#!/bin/bash

# check_mk plug-in to verify that the Escenic Content Engine instances are
# actually running.  If there's something wrong with the pidfile (missing,
# empty) or if the pid is not up (e.g. dead) then it goes critical.
#

engine_instance_list=""
search_instance_list=""

if [ ! -r /etc/default/ece ] ; then
  exit 0
fi

function determine_health() {
  local type=$1
  shift
  for i in $* ; do
    basename="ece_$i"
    pidfile=/var/run/escenic/$i.pid
  
    if [ ! -r $pidfile ] ; then
      echo "2 ${basename}_up - The $pidfile is missing"
      continue;
    fi

    local pid=$(<$pidfile)
    if [ -z "$pid" ] ; then
      echo "2 ${basename}_up - The $pidfile is empty"
      continue;
    fi

    if [ ! -d /proc/$pid ] ; then
      echo "2 ${basename}_up - The process in $pidfile is not running"
      continue;
    fi

    nr_open_files=$(ls /proc/$pid/fd | wc -l)
    limit_open_files=$(cat /proc/$pid/limits | awk '/^Max open files  /{print $4}')
    if [ $nr_open_files -le 2456 ]; then
      echo "0 ${basename}_filehandles - OK ${basename} is using $nr_open_files of $limit_open_files file handles"
    else
        if [ $nr_open_files -le 3456 ]; then
          echo "1 ${basename}_filehandles - ${basename} is using $nr_open_files of $limit_open_files file handles (warning at 50%)"
        else
          echo "2 ${basename}_filehandles - ${basename} is using $nr_open_files of $limit_open_files file handles (critical 75%)"
        fi
    fi

    echo "0 ${basename}_up - OK process $pid"

  done
}

. /etc/default/ece
determine_health engine $engine_instance_list 
determine_health search $search_instance_list 

